From bfdb2c7f3c1b947fa7e9e709bf4ccdf02d2113d1 Mon Sep 17 00:00:00 2001
From: RishikaGhosh <parkrijimin@gmail.com>
Date: Fri, 24 Jul 2020 06:08:57 +0000
Subject: [PATCH] Create Patch File

---
 client3.py | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..3253ec7 100644
--- a/client3.py
+++ b/client3.py
@@ -28,32 +28,35 @@ QUERY = "http://localhost:8080/query?id={}"
 
 # 500 server request
 N = 500
-
 def getDataPoint(quote):
 	""" Produce all of the needed values to generate a datapoint """
 	""" ------------- Update this function ------------- """
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
-
+  
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if(price_b==0):
+		return
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in iter(range(N)):
+	for _ in range(N):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
\ No newline at end of file
-- 
2.17.1

